# Generated by Django 4.0.6 on 2022-08-10 13:42

import cloudinary.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email Address')),
                ('is_school_admin', models.BooleanField(default=False)),
                ('is_guardian', models.BooleanField(default=False)),
                ('avatar', cloudinary.models.CloudinaryField(max_length=255, verbose_name='avatars')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'ordering': ['-email'],
            },
        ),
        migrations.CreateModel(
            name='SchoolDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=50)),
                ('copy_of_CAC', cloudinary.models.CloudinaryField(max_length=255, verbose_name='proof_of_CAC')),
                ('CAC_number', models.CharField(max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(10, 'CAC Number must be 10 digits')])),
                ('school', models.ForeignKey(limit_choices_to={'is_school_admin': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Debtor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('current_class', models.CharField(max_length=3)),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('address', models.CharField(max_length=100)),
                ('debt_type', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('outstanding_fees', models.PositiveIntegerField()),
                ('is_contending_debt', models.BooleanField(default=False)),
                ('age', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(25)])),
                ('academic_session', models.CharField(max_length=10)),
                ('student_picture', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='student_pictures')),
                ('guardian', models.OneToOneField(default=None, limit_choices_to={'is_guardian': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guardian', to=settings.AUTH_USER_MODEL)),
                ('posted_by', models.ForeignKey(limit_choices_to={'is_school_admin': True}, on_delete=django.db.models.deletion.CASCADE, related_name='school_admin', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Contention',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('evidence', cloudinary.models.CloudinaryField(max_length=255, verbose_name='proof_of_contention')),
                ('guardian_contending', models.ForeignKey(limit_choices_to={'is_guardian': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('commented_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.debtor')),
                ('user_commenting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
